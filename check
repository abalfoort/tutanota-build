#!/usr/bin/env bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
cd $SCRIPT_DIR

QUIET=false
while getopts 'q' OPT; do
  case $OPT in
    q)
        QUIET=true
        ;;
  esac
done

# curl -s https://api.github.com/repos/tutao/tutanota/releases/latest | jq -r '.tag_name' | grep 'tutanota-release'
# curl -s https://api.github.com/repos/tutao/tutanota/releases | jq -r '.[0].tag_name' | grep 'tutanota-release'
for I in {0..9}; do
    RELEASETAG=$(curl -s https://api.github.com/repos/tutao/tutanota/releases | jq -r ".[$I].tag_name" | grep -E 'tutanota-release|tutanota-desktop-release')
    if $QUIET; then
        echo $RELEASETAG
        exit
    fi
    [ -n "$RELEASETAG" ] && break
done

if [ -z "$RELEASETAG" ]; then
    TITLE="Tutanota release tag"
    TEXT="Cannot retrieve the latest tutanota-release tag"
    notify-send -u critical -a "$TITLE" -i tutanota-desktop -w "$TITLE" "$TEXT" &
    exit 1
fi

CURRELEASE=0
if [ -d tutanota ]; then
    cd tutanota
    CURRELEASE=$(git branch | grep -E '^\*' | tr -d '()' | awk '{print $NF}')
fi

if [ "$CURRELEASE" != "$RELEASETAG" ]; then
    TITLE="Tutanota build new release!"
    TEXT="<b>Release to build:</b> ${RELEASETAG##*-}"
    notify-send -u critical -a "$TITLE" -i tutanota-desktop -w "$TITLE" "$TEXT" &
else
    TITLE="Tutanota build up-to-date"
    TEXT="<b>Current release:</b> ${RELEASETAG##*-}"
    notify-send -u normal -a "$TITLE" -i tutanota-desktop -t 10000 "$TITLE" "$TEXT" &
fi

rm "$SCRIPT_DIR/build.log" 2>/dev/null
NO_HTML=$(echo "$TEXT" | sed 's/<[^>]*>//g')
echo -e ""$TITLE"\n$NO_HTML" | tee -a "$SCRIPT_DIR/build.log"
